buildscript {
    ext {
        springBootVersion     = "2.2.0.RELEASE"
        gradleDockerVersion   = "1.2"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
    }
}

apply plugin: "java"
apply plugin: "application"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "docker"

mainClassName = 'com.mentormate.demo.GitTerraformApplication'

bootJar {
    baseName = 'demo'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.hibernate:hibernate-envers:5.4.8.Final'
    compile'junit:junit:4.12'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    testCompile 'com.h2database:h2:1.4.199'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.2.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-devtools:2.2.0.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.18'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.0.RELEASE') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task copyJar(dependsOn: build) {
    copy {
        from '/build/libs/demo.jar'
        into '/build/docker/build/libs'
    }
}

task buildDocker(type: Docker, dependsOn: copyJar) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
}
